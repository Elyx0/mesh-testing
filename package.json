{
  "name": "metamask-mesh-testing",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "dependencies": {
    "@nodeutils/defaults-deep": "^1.1.0",
    "cids": "^0.6.0",
    "cors": "^2.8.4",
    "d3": "^4.13.0",
    "datastore-level": "^0.11.0",
    "debug": "^4.1.1",
    "deep-equal": "^1.0.1",
    "detect-node": "^2.0.4",
    "end-of-stream": "^1.4.1",
    "envify": "^4.1.0",
    "express": "^4.16.2",
    "express-ws": "^4.0.0",
    "google-palette": "^1.1.0",
    "hat": "0.0.3",
    "http-poll-stream": "^2.1.0",
    "javascript-time-ago": "^2.0.1",
    "kitsunet-telemetry": "^1.1.2",
    "libp2p": "^0.25.2",
    "libp2p-kad-dht": "^0.14.15",
    "libp2p-mplex": "^0.8.5",
    "libp2p-webrtc-star": "^0.15.8",
    "libp2p-websockets": "^0.12.2",
    "localstorage-down": "^0.6.7",
    "lodash.toplainobject": "^4.2.0",
    "multihashing-async": "^0.6.0",
    "multiplex": "^6.7.0",
    "multiplex-rpc": "^1.0.1",
    "obs-store": "^3.0.0",
    "peer-id": "^0.12.0",
    "peer-info": "^0.14.1",
    "pify": "^3.0.0",
    "promise-to-callback": "^1.0.0",
    "promisify-this": "^2.0.2",
    "pull-stream": "^3.6.9",
    "pull-stream-to-stream": "^1.3.4",
    "pump": "^3.0.0",
    "push-stream-to-pull-stream": "^1.0.3",
    "qs": "^6.5.1",
    "raf-throttle": "^2.0.3",
    "react": "^16.8.6",
    "react-bootstrap": "^1.0.0-beta.8",
    "react-dom": "^16.8.6",
    "react-force-directed": "^1.0.2",
    "react-hyperscript": "^3.2.0",
    "rebirth": "^2.0.0",
    "recharts": "^1.5.0",
    "rpc-stream": "^2.1.2",
    "throttle-obj-stream": "^1.0.0",
    "through2": "^2.0.3",
    "virtual-dom": "^2.1.1",
    "webrtcsupport": "^2.2.0",
    "websocket-stream": "^5.5.0",
    "wrtc": "^0.3.7"
  },
  "devDependencies": {
    "@babel/core": "^7.4.3",
    "@babel/preset-env": "^7.4.3",
    "@babel/preset-react": "^7.0.0",
    "babelify": "^10.0.0",
    "browserify": "^16.1.1",
    "browserify-css": "^0.14.0",
    "budo": "^11.6.2",
    "concurrently": "^4.1.0",
    "exorcist": "^1.0.1",
    "gh-pages": "^2.0.1",
    "patch-package": "^5.1.1",
    "puppeteer": "^1.14.0",
    "wzrd": "^1.5.0"
  },
  "browserify": {
    "transform": [
      [
        "browserify-css",
        {
          "autoInject": true
        }
      ],
      [
        "babelify",
        {
          "presets": [
            "@babel/preset-react",
            "@babel/preset-env"
          ]
        }
      ]
    ]
  },
  "scripts": {
    "postinstall": "patch-package",
    "start": "wzrd src/client/index.js:client-bundle.js src/admin/index.js:admin-bundle.js src/partialRollout.js:partialRollout.js",
    "build": "npm run build:clean && npm run build:version && npm run build:base && npm run build:client && npm run build:admin",
    "build:clean": "rm -rf dist && mkdir -p dist",
    "build:version": "date +%s > dist/BUILD_VERSION; echo \"building $(cat dist/BUILD_VERSION)\"",
    "build:base": "cp index.html dist/ && cp src/partialRollout.js dist/",
    "build:client": "browserify src/client/index.js --full-paths --debug -t [ envify --BUILD_VERSION \"$(cat dist/BUILD_VERSION)\"  ] | exorcist dist/client-bundle.js.map > dist/client-bundle.js",
    "build:admin": "browserify src/admin/index.js --full-paths --debug -t [ envify --BUILD_VERSION \"$(cat dist/BUILD_VERSION)\"  ] | exorcist dist/admin-bundle.js.map > dist/admin-bundle.js",
    "deploy": "gh-pages -d dist",
    "server": "concurrently -n telemetry,star 'npm run server:telemetry' 'npm run server:star'",
    "server:telemetry": "node src/server/index.js",
    "server:telemetry:debug": "node --inspect=0.0.0.0:9221 src/server/index.js",
    "server:star": "star-signal --port=9090 --host=127.0.0.1",
    "server:deploy": "docker-compose pull && docker-compose build && docker-compose stop && docker-compose up -d && docker-compose logs --tail 200 -f",
    "swarm": "npm run swarm:node",
    "swarm:node": "node src/swarm/node.js",
    "swarm:browser": "node src/swarm/browser.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MetaMask/mesh-testing.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/MetaMask/mesh-testing/issues"
  },
  "homepage": "https://github.com/MetaMask/mesh-testing#readme"
}
